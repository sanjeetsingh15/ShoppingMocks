<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="24a7042c-f8e1-48f2-9eb8-c450ee9434ce" activeEnvironment="Default" name="MagentoSoapUI" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="398a42e3-1d56-45b8-b6a3-b9266dc465fd" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8025" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://WKS231:8089/</con:endpoint><con:endpoint>http://localhost:8025</con:endpoint></con:endpoints><con:resource name="" path="/users/login/" id="3e1504e6-66fa-417b-9ffc-b742e616b68f"><con:settings/><con:parameters><con:parameter required="false"><con:name>email</con:name><con:value>sarvagya.pandey@netsolutionsindia.com</con:value><con:style>QUERY</con:style><con:default>sarvagya.pandey@netsolutionsindia.com</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>123456</con:value><con:style>QUERY</con:style><con:default>123456</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="" id="84d4954a-ca45-4408-acb9-9a1f60aa7686" method="GET"><con:settings><con:setting id="RecordResponseRepresentations">true</con:setting></con:settings><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c5c16f4b-dd40-423a-9888-1068a6b2f416" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8025</con:endpoint><con:request/><con:originalUri>http://localhost/users/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="email" value="sarvagya.pandey@netsolutionsindia.com"/>
  <con:entry key="password" value="123456"/>
</con:parameters><con:parameterOrder><con:entry>email</con:entry><con:entry>password</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:restMockService id="f8718c52-a97a-4b7e-b4c1-95a6623b17ed" port="8025" path="/magento_1.9/index.php/phonegapapp/" host="WKS231" name="MagentoMobileMockAPI" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.mock.WsdlMockServiceDesktopPanel$LogListModel@maxSize">100</con:setting></con:settings><con:properties/><con:restMockAction name="/users/login/" method="GET" resourcePath="users/login" id="598551ff-8d1c-46bc-966a-acc5cd44cc47"><con:settings/><con:defaultResponse>Login Successful</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>// The password you entered is incorrect. Please try again.// Match based on path
// 
def requestPath = mockRequest.getPath()

// Match based on header
def acceptHeader = mockRequest.getRequestHeaders()//.get("Accept")
//log.info "Headers :"+ acceptHeader

// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
//log.info "QueryString: " + queryString

// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
//log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

// Match based on body
def requestBody = mockRequest.getRequestContent()
//log.info "Request body: " + requestBodymagento_1.9/index.php/phonegapapp

//def response = mockRequest.httpResponse


 
if (requestPath ==  "/magento_1.9/index.php/phonegapapp/users/login") {
	
    stringOutputSlit=[]
   //fetch Query String Values
    stringOutputSlit=queryString.split("&amp;").collectEntries { param -> 
    
    param.split('=').collect { URLDecoder.decode(it) }
  }
  if(stringOutputSlit['email'] == "sarvagya.pandey@netsolutionsindia.com") 
    	{
	       if( stringOutputSlit['password'] == "123456")
    			{
      				return "Login Successful"
    			}
    		  else
   			{
			
    				return "Login Invalid Password"    	
   			}		
    	}
    	else
  	 {
		
    		return "Login Incorrect Path"    	
   	 }
  }</con:dispatchPath><con:response name="Login Successful" id="5a018695-af4d-42f7-9ff3-f773160f12ba" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "entity_id": "8",
    "entity_type_id": "1",
    "attribute_set_id": "0",
    "website_id": "1",
    "email": "sarvagya.pandey@netsolutionsindia.com",
    "group_id": "1",
    "increment_id": null,
    "store_id": "1",
    "created_at": "2015-09-16T10:04:09-07:00",
    "updated_at": "2015-09-16 10:04:09",
    "is_active": "1",
    "disable_auto_group_change": "0",
    "created_in": "English",
    "firstname": "Sarvagya",
    "lastname": "Pandey",
    "password_hash": "302f016ae9ad2f7b6138fe7c437b0514:85aA7QxVqkbCPvIZaCP1Fh55HSthPzHH",
    "addresses": [],
    "token": "U69CWUKTIKLSZCVQUDYZQHCIVF4DB1K5",
    "error": "0",
    "errorMsg": "Done"
}</con:responseContent></con:response><con:response name="Login Invalid Password" id="b2c1c524-4ebc-417e-adeb-0fc016e82e66" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "error": "2",
    "errorMsg": "The password you entered is incorrect. Please try again."
}</con:responseContent></con:response><con:response name="Login Invalid Email" id="17d8a543-7e5c-4e3e-8b45-4a9dac3a9b5b" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "error": "1",
    "errorMsg": "The email you entered is incorrect. Please try again."
}</con:responseContent></con:response><con:response name="Login Incorrect Path" id="4562de0e-2486-43da-98b6-113650478c30" httpResponseStatus="200"><con:settings/><con:responseContent>{
    "error": "3",
    "errorMsg": "The path is incorrect. Please try again."
}</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/categories/categories/" method="GET" resourcePath="/categories/categories/" id="9fcd3138-45ac-4c84-8a31-0364b43de914"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Categories Successful" id="9a6a791d-8705-4ef5-adb5-fd6d872b110e" httpResponseStatus="200"><con:settings/><con:responseContent>Response : "category_id":1,"parent_id":0,"name":"Root Catalog","position":9,"level":0,"children":[{"category_id":2,"parent_id":1,"name":"Default Category","is_active":1,"position":9,"level":1,"children":[{"category_id":5,"parent_id":2,"name":"Accessories","is_active":1,"position":0,"level":2,"children":[]}</con:responseContent></con:response><con:response name="Categories failed" id="79f54f91-2d4e-4ffd-a646-8e2b48324c75" httpResponseStatus="200"><con:settings/><con:responseContent>{
    "error": "1",
    "errorMsg": "Invalid path"
}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties><con:property><con:name>contextPath</con:name><con:value>/magento_1.9/index.php/phonegapapp/</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>